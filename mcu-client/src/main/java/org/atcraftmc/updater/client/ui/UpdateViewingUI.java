package org.atcraftmc.updater.client.ui;

import org.atcraftmc.updater.client.ClientBootstrap;
import org.atcraftmc.updater.client.ui.component.SimpleJList;
import org.atcraftmc.updater.client.ui.framework.SwingUtil;
import org.atcraftmc.updater.protocol.P10_VersionInfo;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;
import java.util.Set;

public final class UpdateViewingUI {
    private JButton confirmButton;
    private JPanel root;
    private JLabel channel;
    private SimpleJList list;

    public UpdateViewingUI(Set<P10_VersionInfo.info> infos) {
        for (var info : infos) {
            this.list.add(new UpdateInfoCard(info).$$$getRootComponent$$$());
        }
    }

    public static void main(String[] args) {
        ClientBootstrap.theme();

        var t = System.currentTimeMillis();
        var infos = Set.of(
                new P10_VersionInfo.info("server", "1.0.3-SNAPSHOT", t, "服务器资源", "- 新增 Create 模组\n- 移除了BoP"),
                new P10_VersionInfo.info("client", "1.2.0", t, "客户端资源", "- 更新Iris模组到最新版本\n- 移除了不必要的文件"),
                new P10_VersionInfo.info("client-op", "1.1.0", t, "客户端可选资源", "- 添加了 4 款新的资源包")
        );

        view(infos);
    }

    public static void view(Set<P10_VersionInfo.info> infos) {
        var frame = new JFrame("版本日志");
        var ui = new UpdateViewingUI(infos);
        frame.setContentPane(ui.root);
        frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        frame.setResizable(false);
        frame.setSize(450, 650);
        SwingUtil.center(frame);
        frame.setVisible(true);

        ui.confirmButton.addActionListener((e) -> frame.setVisible(false));
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new GridBagLayout());
        final JPanel spacer1 = new JPanel();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        root.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        root.add(spacer2, gbc);
        confirmButton = new JButton();
        confirmButton.setEnabled(true);
        Font confirmButtonFont = this.$$$getFont$$$(null, -1, -1, confirmButton.getFont());
        if (confirmButtonFont != null) {
            confirmButton.setFont(confirmButtonFont);
        }
        confirmButton.setMargin(new Insets(0, 0, 0, 0));
        confirmButton.setPreferredSize(new Dimension(78, 36));
        confirmButton.setSelected(false);
        confirmButton.setText("确定");
        confirmButton.setVisible(true);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.ipadx = 10;
        gbc.ipady = 5;
        root.add(confirmButton, gbc);
        final JScrollPane scrollPane1 = new JScrollPane();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.weightx = 1.5;
        gbc.weighty = 1.5;
        gbc.fill = GridBagConstraints.BOTH;
        root.add(scrollPane1, gbc);
        list = new SimpleJList();
        scrollPane1.setViewportView(list);
        channel = new JLabel();
        Font channelFont = this.$$$getFont$$$(null, -1, 24, channel.getFont());
        if (channelFont != null) {
            channel.setFont(channelFont);
        }
        channel.setText("更新日志");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        root.add(channel, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        root.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.VERTICAL;
        root.add(spacer4, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 6;
        gbc.fill = GridBagConstraints.VERTICAL;
        root.add(spacer5, gbc);
        final JPanel spacer6 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        root.add(spacer6, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) {
            return null;
        }
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(
                font.getFamily(),
                font.getStyle(),
                font.getSize()
        ) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }

}
